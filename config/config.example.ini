[Telegram]
# --- Authentication ---
# Option 1: User Account (for reading from channels/groups) - Requires BOTH api_id/hash AND interactive login on first run
api_id = YOUR_TELEGRAM_API_ID_INT # Your API ID from my.telegram.org (Must be an integer)
api_hash = YOUR_TELEGRAM_API_HASH # Your API Hash from my.telegram.org

# Option 2: Bot Account (for sending status messages) - Requires bot_token (and api_id/hash for Telethon library)
bot_token = YOUR_TELEGRAM_BOT_TOKEN # Token for your Telegram Bot from BotFather

# --- Channel Settings ---
channel_id = TARGET_CHANNEL_ID_OR_USERNAME # Channel/Group ID (e.g., -100...) or username (e.g., @channelname) to monitor
debug_channel_id = OPTIONAL_DEBUG_CHANNEL_ID # Optional: Channel/Group ID for sending detailed debug messages

[MT5]
account = YOUR_MT5_ACCOUNT_INT # Must be an integer
password = YOUR_MT5_PASSWORD
server = YOUR_MT5_SERVER
path = C:\Program Files\MetaTrader 5\terminal64.exe # Path to your terminal64.exe
symbol = XAUUSD # Default symbol to trade if not specified in signal

[Gemini]
api_key = YOUR_GEMINI_API_KEY # API Key from Google AI Studio
model_name = gemini-1.5-flash # Example model, choose based on availability/needs (e.g., gemini-pro, gemini-pro-vision)

[Trading]
# --- Lot Size Calculation ---
# Method: 'fixed' or potentially 'risk_percent_equity' (not implemented yet)
lot_size_method = fixed
fixed_lot_size = 0.01 # Lot size to use if method is 'fixed'
default_lot_size = 0.01 # Fallback lot size if calculation fails or method invalid
# Maximum total open lots allowed for the configured symbol. Set to 0.0 to disable.
max_total_open_lots = 0.1
# Maximum allowed slippage/deviation for market orders (in points)
max_slippage = 10

[Strategy]
# --- Entry Price Range Handling ---
# How to determine entry price when a range (e.g., "1900-1905") is given for a PENDING order.
# Options:
#   midpoint: Use the middle price of the range.
#   closest: Use the range boundary closest to the current market price.
#   farthest: Use the range boundary farthest from the current market price.
entry_range_strategy = midpoint

# --- Multiple Take Profit Handling ---
# How to handle signals with multiple TP levels (e.g., "TP 1910, 1920, 1930").
# Options:
#   first_tp_full_close: Set initial TP to the first level. Close full position when hit.
#   last_tp_full_close: Set initial TP to the last level. Close full position when hit.
#   sequential_partial_close: Set initial TP to the first level. Close a portion at each TP hit, modify remaining TP to next level. Last TP closes remainder.
tp_execution_strategy = first_tp_full_close

# --- Partial Close Settings (Used only if tp_execution_strategy = sequential_partial_close) ---
# Percentage of the ORIGINAL trade volume to close when each TP level (EXCEPT the final one) is hit.
# The final TP level always closes the remaining volume.
# Must be an integer between 1 and 99.
partial_close_percentage = 50


[DecisionLogic]
# Weights for combining sentiment and price action scores (must sum to 1.0 if use_sentiment_analysis is true)
sentiment_weight = 0.3 # Example: Lower weight for sentiment
price_action_weight = 0.7 # Example: Higher weight for price action confirmation
# Minimum combined score required to approve a pending order signal
approval_threshold = 0.6
# Whether to use the LLM's sentiment score in the decision logic
use_sentiment_analysis = true

[Logging]
log_file = logs/bot.log # Relative path to log file
log_level = INFO # DEBUG, INFO, WARNING, ERROR, CRITICAL

[Retries]
# Settings for retrying MT5 orders on specific errors
requote_retry_attempts = 3 # Number of times to retry on requote/price_off
requote_retry_delay_seconds = 2 # Delay between retries

[Misc]
# Max number of processed Telegram message IDs to keep in memory to prevent duplicates
duplicate_cache_size = 10000

[LLMContext]
# Control what context is sent to the LLM with each analysis request
enable_price_context = true # Send current market price?
enable_trade_context = true # Send list of active bot trades?
enable_history_context = true # Send recent message history?
history_message_count = 5 # Number of recent messages to include in history context

[AutoSL]
# Automatic Stop Loss Settings
enable_auto_sl = false # Enable applying an automatic SL if none provided in signal?
auto_sl_delay_seconds = 60 # How many seconds after trade entry to wait before applying AutoSL
auto_sl_risk_usd = 5.0 # The target risk amount in account currency (e.g., USD) for the AutoSL